[platformio]
default_envs = devel
include_dir = src

[env]
; platform = espressif32
platform = https://github.com/platformio/platform-espressif32.git#master
platform_packages =
   framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
; Disable dynamic toolchain configuration for upstream Arduino packages
; board_build.arduino.upstream_packages = no
board = lolin32_lite
framework = arduino
lib_extra_dirs = ~/wrk/libs
lib_deps = 
	git@github.com:gsoros/MPU9250.git
	;https://github.com/h2zero/NimBLE-Arduino @ master
	git@github.com:gsoros/HX711_ADC.git
	rlogiacco/CircularBuffer@^1.3.3
monitor_speed = 115200
monitor_filters = 
	esp32_exception_decoder
	default
board_build.partitions = partitions.csv
extra_scripts = custom_tasks.py
upload_port = /dev/ttyUSB1
monitor_port = /dev/ttyUSB1

[common]
build_flags = 
	'-DVERSION="0.3"'
	-DNO_GLOBAL_SERIAL
	-DAPI_SERVICE=1 ; 1=ESPM, 2=ESPCC 
	-DCONFIG_BT_NIMBLE_ATT_PREFERRED_MTU=512
	-DCONFIG_BT_NIMBLE_MSYS1_BLOCK_COUNT=24 ; increase if sending large data with low MTU, e.g. 512B with 23 MTU will fail. default 12 
	-DCONFIG_BT_NIMBLE_ROLE_CENTRAL_DISABLED ; client
	-DCONFIG_BT_NIMBLE_ROLE_OBSERVER_DISABLED ; scan
	;-DCONFIG_BT_NIMBLE_ROLE_PERIPHERAL_DISABLED ; server
	;-DCONFIG_BT_NIMBLE_ROLE_BROADCASTER_DISABLED ; advertising
	-DCONFIG_BT_NIMBLE_MAX_CONNECTIONS=8
	-DCONFIG_BT_NIMBLE_MAX_BONDS=3
	-DCONFIG_BT_NIMBLE_PINNED_TO_CORE=1
	-DCONFIG_BT_NIMBLE_TASK_STACK_SIZE=8192
	-DCONFIG_BT_NIMBLE_HOST_TASK_STACK_SIZE=8192
	-DCONFIG_NIMBLE_STACK_USE_MEM_POOLS=0

[devel]
build_flags = 
	${common.build_flags}
	'-DBUILDTAG="dev"'
	-DCORE_DEBUG_LEVEL=1 ; 0: none, 1: error, 2: warning, 3, info, 4: debug, 5: verbose
	-DATOLL_LOG_LEVEL=4 ; 0: none, 1: error, 2: warning, 3, info, 4+: debug
	-DCONFIG_BT_NIMBLE_LOG_LEVEL=3 ; 0 = DEBUG, 1 = INFO, 2 = WARNING, 3 = ERROR, 4 = CRITICAL, 5+ = NONE
	-DCONFIG_NIMBLE_CPP_LOG_LEVEL=1 ; 0 = NONE, 1 = ERROR, 2 = WARNING, 3 = INFO, 4+ = DEBUG
	-DCONFIG_NIMBLE_CPP_ENABLE_RETURN_CODE_TEXT ; return codes as text
	-DCONFIG_NIMBLE_CPP_ENABLE_GAP_EVENT_CODE_TEXT ; GAP event codes as text
	-DCONFIG_NIMBLE_CPP_ENABLE_ADVERTISEMENT_TYPE_TEXT ; advertisement types as text
	-DFEATURE_SERIAL
	;-DENABLE_I2C_DEBUG_BUFFER

[prod]
build_flags = 
	${common.build_flags}
	'-DBUILDTAG="prod"'
	-DCORE_DEBUG_LEVEL=0 ; 0: none, 1: error, 2: warning, 3, info, 4: debug, 5: verbose
	-DATOLL_LOG_LEVEL=0 ; 0: none, 1: error, 2: warning, 3, info, 4+: debug
	-DCONFIG_BT_NIMBLE_LOG_LEVEL=5 ; 0 = DEBUG, 1 = INFO, 2 = WARNING, 3 = ERROR, 4 = CRITICAL, 5+ = NONE
	-DCONFIG_NIMBLE_CPP_LOG_LEVEL=0 ; 0 = NONE, 1 = ERROR, 2 = WARNING, 3 = INFO, 4+ = DEBUG
	-DFEATURE_SERIAL

[env:devel]
lib_deps = ${env.lib_deps}
build_flags = ${devel.build_flags}
build_type = debug

[env:develOTA]
lib_deps = ${env.lib_deps}
build_flags = ${devel.build_flags}
build_type = debug
upload_protocol = espota
upload_port = ESPMdebug.local

[env:prod]
lib_deps = ${env.lib_deps}
build_flags = ${prod.build_flags}

[env:prodOTA]
lib_deps = ${env.lib_deps}
build_flags = ${prod.build_flags}
upload_protocol = espota
upload_port = ESPM.local
